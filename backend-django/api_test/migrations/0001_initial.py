# Generated by Django 5.1.7 on 2025-04-01 22:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Corrective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sets', models.IntegerField(blank=True, null=True)),
                ('reps', models.IntegerField(blank=True, null=True)),
                ('youtube_link', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('team', models.CharField(max_length=100)),
                ('correctives', models.ManyToManyField(blank=True, related_name='players', to='api_test.corrective')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerPhase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_test.phase')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_test.player')),
            ],
        ),
        migrations.CreateModel(
            name='PhaseWorkout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reps', models.IntegerField()),
                ('sets', models.IntegerField()),
                ('week', models.IntegerField()),
                ('day', models.IntegerField()),
                ('order', models.IntegerField(default=1)),
                ('default_rpe', models.JSONField(default=list)),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phase_workouts', to='api_test.phase')),
                ('workout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_test.workout')),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.IntegerField()),
                ('day', models.IntegerField()),
                ('exercises', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_test.phase')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_test.player')),
            ],
            options={
                'unique_together': {('player', 'phase', 'week', 'day')},
            },
        ),
    ]
